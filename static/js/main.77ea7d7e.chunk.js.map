{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","handleChange","placeholder","type","onChange","App","handleSearchFieldChange","evt","setState","searchField","target","value","state","fetch","then","response","json","body","this","filteredMonsters","filter","m","toLowerCase","includes","class","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCLLC,G,MAAW,SAACC,GACvB,OACE,qBAAKP,UAAU,YAAf,SACIO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCJdQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,YACvC,OACE,qBAAKZ,UAAU,aAAf,SACE,uBAAOA,UAAU,QAAQY,YAAaA,EACpCC,KAAK,OAAOC,SAAUH,QCkCfI,E,kDAnCb,aAAe,IAAD,8BACZ,gBAaFC,wBAA0B,SAACC,GACzB,EAAKC,SAAS,CAAEC,YAAaF,EAAIG,OAAOC,SAbxC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAQ5C,WAEE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAAAC,GAAC,OAAIA,EAAE3B,KAAK4B,cAAcC,SAASd,EAAYa,kBAExF,OACE,sBAAKE,MAAM,MAAX,UACE,kDACA,cAAC,EAAD,CAAWtB,YAAY,kBACrBD,aAAciB,KAAKZ,0BACrB,cAAC,EAAD,CAAUR,SAAUqB,W,GA9BVM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.77ea7d7e.chunk.js","sourcesContent":["import React from 'react'\n\nimport './card.styles.css'\n\nexport const Card = ({ monster }) => {\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  )\n}","import React from 'react'\nimport { Card } from '../card/card.component'\nimport './card-list.styles.css'\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      { props.monsters.map(monster =>\n        <Card key={monster.id} monster={monster} />)\n      }\n    </div>\n  )\n}","import React from 'react'\n\nimport './search-box.styles.css'\n\nexport const SearchBox = ({handleChange, placeholder}) => {\n  return (\n    <div className=\"search-box\">\n      <input className=\"input\" placeholder={placeholder}\n        type=\"text\" onChange={handleChange} />\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(body => this.setState({ monsters: body }))\n  }\n\n  handleSearchFieldChange = (evt) => {\n    this.setState({ searchField: evt.target.value })\n  }\n\n\n  render() {\n\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(m => m.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div class=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\"\n          handleChange={this.handleSearchFieldChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}